{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","setFilm","useState","inputText","setInputText","onTitleChange","film","setCurentFilm","filmFound","setFilmFound","showFilm","setFilmShoving","getFilm","a","fetch","then","response","json","result","searchResult","Response","preparedFilm","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","state","data","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6yEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,8BCH3BG,G,MAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOhB,EAAP,KAAcmB,EAAd,KACA,EAA8BH,mBAAS,MAAvC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAmCP,oBAAS,GAA5C,mBAAOQ,EAAP,KAAiBC,EAAjB,KAEMC,EAAO,uCAAG,8BAAAC,EAAA,sEACaC,MAVd,6CAU+B5B,GACzC6B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,KAHJ,OACRC,EADQ,OAKdR,GAAe,GACe,UAA1BQ,EAAaC,WACfT,GAAe,GACfF,GAAa,IAGTY,EAAe,CACnBnC,MAAOiC,EAAaG,MACpBnC,YAAagC,EAAaI,KAC1BnC,OAAQ+B,EAAaK,OACrBnC,QAAQ,8BAAD,OAAgC8B,EAAaM,QACpDA,OAAQN,EAAaM,QAGvBlB,EAAcc,GAnBA,2CAAH,qDAsBb,OACE,oCACE,0BAAM/B,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQoC,QAAQ,eAAjC,eAIA,yBAAKpC,UAAU,WACb,2BACEqC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvC,UAAS,gBAAWkB,EAChB,GACA,aAGJsB,MAAO3B,EACP4B,SAAU,SAACC,GACT3B,EAAc2B,EAAMC,OAAOH,OAC3B1B,EAAa4B,EAAMC,OAAOH,OAC1BrB,GAAa,OAKjBD,EACI,GAEA,uBAAGlB,UAAU,kBAAb,yCAOR,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEqC,KAAK,SACLrC,UAAU,kBACV4C,QAAStB,GAHX,iBASF,yBAAKtB,UAAU,WACb,4BACEqC,KAAK,SACLrC,UAAU,oBACV4C,QAAS,WACPjC,EAAQK,GACRK,GAAe,GACfP,EAAa,MANjB,sBAeN,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,WAGIoB,EACI,kBAAC,EAAcJ,GACf,O,QCrGH6B,EAAb,4MACEC,MAAQ,CACNzC,OAAQ0C,GAFZ,EAKEpC,QAAU,SAACK,GACJ,EAAK8B,MAAMzC,OAAO2C,MAAK,SAAAzC,GAAK,OAAIA,EAAM4B,SAAWnB,EAAKmB,WACzD,EAAKc,UAAS,gBAAG5C,EAAH,EAAGA,OAAH,MAAiB,CAC7BA,OAAO,GAAD,mBAAMA,GAAN,CAAcW,SAR5B,4CAaE,WACE,IAAQX,EAAW6C,KAAKJ,MAAhBzC,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,QAASuC,KAAKvC,gBAtBnC,GAAyBwC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c8720591.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=53a187d&t=';\n\nexport const FindMovie = ({ setFilm }) => {\n  const [inputText, setInputText] = useState('');\n  const [title, onTitleChange] = useState('');\n  const [film, setCurentFilm] = useState(null);\n  const [filmFound, setFilmFound] = useState(true);\n  const [showFilm, setFilmShoving] = useState(false);\n\n  const getFilm = async() => {\n    const searchResult = await fetch(BASE_URL + title)\n      .then(response => response.json())\n      .then(result => result);\n\n    setFilmShoving(true);\n    if (searchResult.Response === 'False') {\n      setFilmShoving(false);\n      setFilmFound(false);\n    }\n\n    const preparedFilm = {\n      title: searchResult.Title,\n      description: searchResult.Plot,\n      imgUrl: searchResult.Poster,\n      imdbUrl: `https://www.imdb.com/title/${searchResult.imdbID}`,\n      imdbID: searchResult.imdbID,\n    };\n\n    setCurentFilm(preparedFilm);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${filmFound\n                ? ''\n                : 'is-danger'\n              }`\n              }\n              value={inputText}\n              onChange={(event) => {\n                onTitleChange(event.target.value);\n                setInputText(event.target.value);\n                setFilmFound(true);\n              }}\n            />\n          </div>\n          {\n            filmFound\n              ? ''\n              : (\n                <p className=\"help is-danger\">\n                  Can&apos;t find a movie with such a title\n                </p>\n              )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                setFilm(film);\n                setFilmShoving(false);\n                setInputText('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          (\n            showFilm\n              ? <MovieCard {...film} />\n              : ''\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  setFilm: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  setFilm = (film) => {\n    if (!this.state.movies.some(movie => movie.imdbID === film.imdbID)) {\n      this.setState(({ movies }) => ({\n        movies: [...movies, film],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie setFilm={this.setFilm} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}